{"version":3,"sources":["firebase.js","Login.js","Register.js","Reset.js","Todo.js","Dashboard.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","googleProvider","GoogleAuthProvider","signInWithGoogle","a","signInWithPopup","res","user","collection","where","uid","get","docs","length","doc","set","name","displayName","authProvider","email","console","error","alert","message","signInWithEmailAndPassword","password","registerWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","logout","signOut","Login","useState","setEmail","setPassword","useAuthState","loading","history","useHistory","useEffect","replace","className","type","value","onChange","e","target","placeholder","onClick","to","Register","setName","Reset","TodoListItem","todo","inprogress","id","usid","style","display","flexDirection","padding","backgroundColor","borderRadius","marginTop","ListItem","ListItemText","primary","secondary","alignSelf","Button","String","update","delete","Dashboard","setUserId","todos","setTodos","todoInput","setTodoInput","fetchUserName","query","data","orderBy","onSnapshot","snapshot","map","alignItems","width","paddingRight","paddingTop","TextField","label","maxWidth","multiline","rows","defaultValue","variant","preventDefault","add","timestamp","FieldValue","serverTimestamp","textAlign","fontSize","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12a011be.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyAOwLx-kFJU3KRDXnNVbmiQse7bQnOtN6A\",\r\n    authDomain: \"todo-app-8159a.firebaseapp.com\",\r\n    projectId: \"todo-app-8159a\",\r\n    storageBucket: \"todo-app-8159a.appspot.com\",\r\n    messagingSenderId: \"693631458943\",\r\n    appId: \"1:693631458943:web:f758cec04138be8867694a\"\r\n  };\r\n\r\n  const app = firebase.initializeApp(firebaseConfig);\r\n  const auth = app.auth();\r\n  const db = app.firestore();\r\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n  const signInWithGoogle = async () => {\r\n    try {\r\n      const res = await auth.signInWithPopup(googleProvider);\r\n      const user = res.user;\r\n      const query = await db\r\n        .collection(\"users\")\r\n        .where(\"uid\", \"==\", user.uid)\r\n        .get();\r\n      if (query.docs.length === 0) {\r\n        await db.collection(\"users\").doc(user.uid).set({\r\n          uid: user.uid,\r\n          name: user.displayName,\r\n          authProvider: \"google\",\r\n          email: user.email,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(err.message);\r\n    }\r\n  };\r\n  const signInWithEmailAndPassword = async (email, password) => {\r\n    try {\r\n      await auth.signInWithEmailAndPassword(email, password);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(err.message);\r\n    }\r\n  };\r\n  const registerWithEmailAndPassword = async (name, email, password) => {\r\n    try {\r\n      const res = await auth.createUserWithEmailAndPassword(email, password);\r\n      const user = res.user;\r\n      await db.collection(\"users\").doc(user.uid).set({\r\n        uid: user.uid,\r\n        name,\r\n        authProvider: \"local\",\r\n        email,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(err.message);\r\n    }\r\n  };\r\n  const sendPasswordResetEmail = async (email) => {\r\n    try {\r\n      await auth.sendPasswordResetEmail(email);\r\n      alert(\"Password reset link sent!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(err.message);\r\n    }\r\n  };\r\n  const logout = () => {\r\n    auth.signOut();\r\n  };\r\n  export {\r\n    auth,\r\n    db,\r\n    signInWithGoogle,\r\n    signInWithEmailAndPassword,\r\n    registerWithEmailAndPassword,\r\n    sendPasswordResetEmail,\r\n    logout,\r\n  };","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { auth, signInWithEmailAndPassword, signInWithGoogle } from \"./firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport \"./Login.css\";\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, loading, error] = useAuthState(auth);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (loading) {\r\n      // maybe trigger a loading screen\r\n      return;\r\n    }\r\n    if (user) history.replace(\"/dashboard\");\r\n  }, [user, loading]);\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"pad\">\r\n      <div>\r\n        <h1 className=\"h1tag\">TODO</h1>\r\n      </div>\r\n      <div className=\"login__container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"login__textBox\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"E-mail Address\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"login__textBox\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n        />\r\n        <button\r\n          className=\"login__btn\"\r\n          onClick={() => signInWithEmailAndPassword(email, password)}\r\n        >\r\n          Login\r\n        </button>\r\n        <button className=\"login__btn login__google\" onClick={signInWithGoogle}>\r\n          Login with Google\r\n        </button>\r\n        <div>\r\n          <Link to=\"/reset\">Forgot Password</Link>\r\n        </div>\r\n        <div>\r\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","import React, { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  auth,\r\n  registerWithEmailAndPassword,\r\n  signInWithGoogle,\r\n} from \"./firebase\";\r\nimport \"./Register.css\";\r\nfunction Register() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [user, loading, error] = useAuthState(auth);\r\n  const history = useHistory();\r\n  const register = () => {\r\n    if (!name) alert(\"Please enter name\");\r\n    registerWithEmailAndPassword(name, email, password);\r\n  };\r\n  useEffect(() => {\r\n    if (loading) return;\r\n    if (user) history.replace(\"/dashboard\");\r\n  }, [user, loading]);\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"pad\">\r\n      <div>\r\n        <h1 className=\"h1tag\">TODO</h1>\r\n      </div>\r\n      <div className=\"register__container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"register__textBox\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder=\"Full Name\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"register__textBox\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"E-mail Address\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"register__textBox\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n        />\r\n        <button className=\"register__btn\" onClick={register}>\r\n          Register\r\n        </button>\r\n        <button\r\n          className=\"register__btn register__google\"\r\n          onClick={signInWithGoogle}\r\n        >\r\n          Register with Google\r\n        </button>\r\n        <div>\r\n          Already have an account? <Link to=\"/\">Login</Link> now.\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Register;","import React, { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { auth, sendPasswordResetEmail } from \"./firebase\";\r\nimport \"./Reset.css\";\r\nfunction Reset() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [user, loading, error] = useAuthState(auth);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (loading) return;\r\n    if (user) history.replace(\"/dashboard\");\r\n  }, [user, loading]);\r\n  return (\r\n    <div className=\"reset\">\r\n      <div className=\"pad\">\r\n      <div>\r\n        <h1 className=\"h1tag\">TODO</h1>\r\n      </div>\r\n      <div className=\"reset__container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"reset__textBox\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"E-mail Address\"\r\n        />\r\n        <button\r\n          className=\"reset__btn\"\r\n          onClick={() => sendPasswordResetEmail(email)}\r\n        >\r\n          Send Password Reset Link\r\n        </button>\r\n        <div>\r\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Reset;","import React from \"react\";\nimport { ListItem, ListItemText, Button } from \"@material-ui/core\";\nimport { auth, db } from \"./firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nexport default function TodoListItem({ todo, inprogress, id}) {\n  const [user, loading, error] = useAuthState(auth);\n  const usid = user.uid;\n  function toggleInProgress() {\n    db.collection(\"users\").doc(String(usid)).collection(\"todos\").doc(id).update({\n      inprogress: !inprogress,\n    });\n  }\n \n  function deleteTodo() {\n    db.collection(\"users\").doc(String(usid)).collection(\"todos\").doc(id).delete();\n  }\n\n  return (\n    <div style={{ display: \"flex\",flexDirection:\"column\",padding:\"10px\",backgroundColor:\"rgb(230, 230, 230)\",borderRadius:\"25px\",marginTop:\"10px\"}}>\n      <ListItem>\n        <ListItemText \n          primary={todo}\n          secondary=\n          {\n            inprogress ? \"In Progress...\" : \"Completed ✅\"\n          }\n        />\n      </ListItem>\n\n      <div style={{flexDirection:\"row\",alignSelf:\"flex-end\"}}>\n      <Button onClick={toggleInProgress}>\n        {inprogress ? \"✔️\" : \"❌\"}\n      </Button>\n      <Button onClick={deleteTodo}>🗑️</Button>\n      </div>\n    </div>\n  );\n}\n","\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport firebase from \"firebase\";\r\nimport TodoListItem from \"./Todo\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"./Dashboard.css\";\r\nimport { auth, db, logout,user } from \"./firebase\";\r\nimport { orderBy } from \"firebase/firestore\";\r\n\r\nfunction Dashboard() {\r\n  const [user, loading, error] = useAuthState(auth);\r\n  const [name, setName] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const history = useHistory();\r\n  const [todos, setTodos] = useState([]);\r\n  const [todoInput, setTodoInput] = useState(\"\");\r\n  const fetchUserName = async () => {\r\n    try {\r\n      const query = await db\r\n        .collection(\"users\")\r\n        .where(\"uid\", \"==\", user?.uid)\r\n        .get();\r\n      const data = await query.docs[0].data();\r\n      setName(data.name);\r\n      setUserId(data.uid);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (loading) return;\r\n    if (!user) return history.replace(\"/\");\r\n    fetchUserName();\r\n    const usid = user.uid;\r\n    function getTodos() {\r\n      db.collection(\"users\").doc(String(usid)).collection(\"todos\").orderBy(\"timestamp\",\"desc\").onSnapshot((snapshot) =>\r\n      setTodos(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          todo: doc.data().todo,\r\n          inprogress: doc.data().inprogress\r\n        })))\r\n      );\r\n    }\r\n    getTodos();\r\n  }, [user, loading]);\r\n\r\n  function addTodo(e) {\r\n    e.preventDefault();\r\n\r\n    if(todoInput!=\"\"){\r\n      db.collection(\"users\").doc(String(user.uid)).collection(\"todos\").add({\r\n        inprogress: true,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        todo: todoInput,\r\n      });\r\n    }\r\n\r\n    setTodoInput(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          width: \"100%\"\r\n        }}\r\n      >\r\n        <div style={{display: \"flex\",alignSelf:\"flex-end\",flexDirection:\"column\", paddingRight:\"3%\",paddingTop:\"3%\"}}>\r\n          {/* Logged in as\r\n          <div>{name}</div>\r\n          <div>{user?.email}</div> */}\r\n          <button className=\"dashboard__btn\" onClick={logout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n        <h1>TODO</h1>\r\n        <form>\r\n          <TextField\r\n            id=\"filled-multiline-static\"\r\n            label=\"Write a Todo\"\r\n            value={todoInput}\r\n            style={{ width: \"90vw\", maxWidth: \"500px\" }}\r\n            onChange={(e) => setTodoInput(e.target.value)}\r\n            multiline\r\n            rows={2}\r\n            defaultValue=\"\"\r\n            variant=\"filled\"\r\n          />\r\n          <br></br><br></br>\r\n          <button className=\"dashboard__btn_add\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            onClick={addTodo}>\r\n            ADD\r\n          </button>\r\n          <br></br>\r\n        </form>\r\n\r\n        <div>\r\n        <br></br><br></br>\r\n        </div>\r\n\r\n        <div className=\"dashboard_list\" style={{ width: \"90vw\", maxWidth: \"1000px\"}}>\r\n          <h2 style={{textAlign:\"center\",fontSize:\"30px\"}}>Your ToDo's</h2>\r\n          {todos.map((todo) => (\r\n            <TodoListItem\r\n              todo={todo.todo}\r\n              inprogress={todo.inprogress}\r\n              id={todo.id}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div>\r\n        <br></br><br></br>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Dashboard;","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Reset from \"./Reset\";\nimport Dashboard from \"./Dashboard\";\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/reset\" component={Reset} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}